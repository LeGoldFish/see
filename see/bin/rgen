local config = { }
local _, err = pcall(function(...)
    local USAGE = "Usage: rgen <classArchive> <mainClass> <target>"

    local args = { ... }
    if #args < 3 then print(USAGE) end
    local classArchive = "/" .. shell.resolve(args[1])
    local mainClass = args[2]
    local target = "/" .. shell.resolve(args[3])

    local archiveHandle = fs.open(classArchive, "r")
    local archiveBytes = archiveHandle.readAll()
    archiveHandle.close()

    -- Insert $ in places to pass arguments.
    local code =
[[
local config = { }
local _, err = pcall(function(...)
    local CONFIG_FAIL = "Failed load /.see config file. Reinstall SEE or replace the file with correct info."
    local apiPath, rt
    local args = {...}
    local archiveBytes = '$'
    local mainClassName = '$'
    local classPath = "FROM_MEMORY"

    local natives = { }
    for k, v in pairs(_G) do
        natives[k] = v
    end
    natives.shell = shell

    local fileHandle = fs.open("/.see", "r")
    if not fileHandle then
        print(CONFIG_FAIL)
        return
    end
    local configFunc, err = loadstring(fileHandle.readAll())

    if err then
        print(CONFIG_FAIL)
        return
    end

    setfenv(configFunc, config)
    configFunc()
    fileHandle.close()

    apiPath = fs.combine(config.install_dir, "apis/see")
    os.loadAPI(apiPath)
    rt = see.SeeRT.new(natives, config.install_dir)
    table.insert(rt.classPaths, classPath)

    rt.archives[classPath] = archiveBytes
    local MainClass = rt:loadClassFromAny(mainClassName)
    if not MainClass then error("Main class not found! ") end
    if not MainClass.main then error("Main method not found!") end
    rt:start(MainClass, unpack(args))
end, ...)

os.unloadAPI(fs.combine(config.install_dir, "apis/see"))

if err then
    error(err)
end
]]

    local escaped
    local archiveTable = { }
    for i = 1, #archiveBytes do
        local b = archiveBytes:sub(i, i):byte()
        if b < 32 or b > 126 or b == 34 or b == 39 then
            escaped = true
            archiveTable[i] = "\\" .. b
        else
            if escaped then
                escaped = false
                if b > 47 and b < 57 then
                    archiveTable[i] ="'..'" .. string.char(b);
                else
                    archiveTable[i] = string.char(b)
                end
            else
                archiveTable[i] = string.char(b)
            end
        end
    end

    local archiveConverted = table.concat(archiveTable)

    local f = code:find("$", 1, true)
    code = code:sub(1, f - 1) .. archiveConverted .. code:sub(f + 1)
    f = code:find("$", f + #archiveConverted, true)
    code = code:sub(1, f - 1) .. mainClass .. code:sub(f + 1)

    local out = fs.open(target, "w")
    out.write(code)
    out.close()
end, ...)

if err then
    error(err)
end